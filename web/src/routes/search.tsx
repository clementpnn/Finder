import SearchCard from "@/components/cards/SearchCard"
import { createFileRoute, Link } from "@tanstack/react-router"
import { Search } from "lucide-react"
import { useEffect, useState } from "react"
import { useQuery } from "@tanstack/react-query"
import { fetchData } from "@/services/http"

export const Route = createFileRoute("/search")({
  validateSearch: (search: Record<string, unknown>): Search => {
    return {
      page: Number(search?.page ?? 1),
      search: (search?.search as string) || ""
    }
  },
  component: Seacrh
})

function Seacrh() {
  const [searchState, setSearchState] = useState<string>("")
  const { page, search } = Route.useSearch()

  useEffect(() => {
    setSearchState(search)
  }, [search])

  const { isPending, isError, data, error } = useQuery({ queryKey: ["data", page, search], queryFn: () => fetchData(page, search) })

  return (
    <div className="flex flex-col w-full">
      <div className="h-fit border-b-1 border-black pb-4">
        <div className="flex items-center">
          <Link to="/">
            <svg width="112px" viewBox="0 0 512 256" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M36.416 192H21.296V72.048H88.328V85.32H36.416V127.824H85.136V141.096H36.416V192ZM121.181 101.952V192H106.397V101.952H121.181ZM113.957 68.184C116.197 68.184 118.157 68.968 119.837 70.536C121.629 71.992 122.525 74.344 122.525 77.592C122.525 80.728 121.629 83.08 119.837 84.648C118.157 86.216 116.197 87 113.957 87C111.493 87 109.421 86.216 107.741 84.648C106.061 83.08 105.221 80.728 105.221 77.592C105.221 74.344 106.061 71.992 107.741 70.536C109.421 68.968 111.493 68.184 113.957 68.184ZM193.054 100.272C203.806 100.272 211.926 102.904 217.414 108.168C222.902 113.32 225.646 121.72 225.646 133.368V192H211.03V134.376C211.03 127.096 209.406 121.664 206.158 118.08C202.91 114.496 197.814 112.704 190.87 112.704C180.902 112.704 174.014 115.504 170.206 121.104C166.398 126.704 164.494 134.768 164.494 145.296V192H149.71V101.952H161.638L163.822 114.216H164.662C166.678 111.08 169.142 108.504 172.054 106.488C175.078 104.36 178.382 102.792 181.966 101.784C185.55 100.776 189.246 100.272 193.054 100.272ZM285.481 193.68C274.281 193.68 265.321 189.816 258.601 182.088C251.881 174.248 248.521 162.6 248.521 147.144C248.521 131.688 251.881 120.04 258.601 112.2C265.433 104.248 274.449 100.272 285.649 100.272C290.353 100.272 294.441 100.888 297.913 102.12C301.385 103.24 304.409 104.808 306.985 106.824C309.561 108.84 311.745 111.08 313.537 113.544H314.545C314.433 112.088 314.209 109.96 313.873 107.16C313.649 104.248 313.537 101.952 313.537 100.272V64.32H328.321V192H316.393L314.209 179.904H313.537C311.745 182.48 309.561 184.832 306.985 186.96C304.409 188.976 301.329 190.6 297.745 191.832C294.273 193.064 290.185 193.68 285.481 193.68ZM287.833 181.416C297.353 181.416 304.017 178.84 307.825 173.688C311.745 168.424 313.705 160.528 313.705 150V147.312C313.705 136.112 311.857 127.544 308.161 121.608C304.465 115.56 297.633 112.536 287.665 112.536C279.713 112.536 273.721 115.728 269.689 122.112C265.769 128.384 263.809 136.84 263.809 147.48C263.809 158.232 265.769 166.576 269.689 172.512C273.721 178.448 279.769 181.416 287.833 181.416ZM391.697 100.272C399.425 100.272 406.033 101.952 411.521 105.312C417.121 108.672 421.377 113.432 424.289 119.592C427.313 125.64 428.825 132.752 428.825 140.928V149.832H367.169C367.393 160.024 369.969 167.808 374.897 173.184C379.937 178.448 386.937 181.08 395.897 181.08C401.609 181.08 406.649 180.576 411.017 179.568C415.497 178.448 420.089 176.88 424.793 174.864V187.8C420.201 189.816 415.665 191.272 411.185 192.168C406.705 193.176 401.385 193.68 395.225 193.68C386.713 193.68 379.153 191.944 372.545 188.472C366.049 185 360.953 179.848 357.257 173.016C353.673 166.072 351.881 157.616 351.881 147.648C351.881 137.792 353.505 129.336 356.753 122.28C360.113 115.224 364.761 109.792 370.697 105.984C376.745 102.176 383.745 100.272 391.697 100.272ZM391.529 112.368C384.473 112.368 378.873 114.664 374.729 119.256C370.697 123.736 368.289 130.008 367.505 138.072H413.369C413.369 132.92 412.585 128.44 411.017 124.632C409.449 120.824 407.041 117.856 403.793 115.728C400.657 113.488 396.569 112.368 391.529 112.368ZM493.749 100.272C495.429 100.272 497.221 100.384 499.125 100.608C501.141 100.72 502.877 100.944 504.333 101.28L502.485 114.888C501.029 114.552 499.405 114.272 497.613 114.048C495.933 113.824 494.309 113.712 492.741 113.712C489.269 113.712 485.965 114.44 482.829 115.896C479.693 117.352 476.893 119.424 474.429 122.112C471.965 124.688 470.005 127.824 468.549 131.52C467.205 135.216 466.533 139.36 466.533 143.952V192H451.749V101.952H463.845L465.525 118.416H466.197C468.101 115.056 470.397 112.032 473.085 109.344C475.773 106.544 478.853 104.36 482.325 102.792C485.797 101.112 489.605 100.272 493.749 100.272Z" fill="black"/>
            </svg>
          </Link>
          <form className="flex items-center ml-4 border-1 w-1/2 rounded-full border-gray-300 hover:shadow-md">
            <Link to="/search" search={{ page: 3, search: searchState }} className="text-gray-400 pl-3 py-1 pt-2">
              <button type="submit">
                <Search size={16} />
              </button>
            </Link>
            <input
              type="text"
              className="px-3 py-1 w-full outline-none border-none text-sm"
              value={searchState}
              onChange={(e) => setSearchState(e.target.value)}
            />
          </form>
        </div>
      </div>
      <div className="py-4 flex flex-col gap-4">
        {isPending && <p>Loading...</p>}
        {isError && <p>{error.message}</p>}
        {data && data.pages.map((item) => (
          <SearchCard title={item.Title} description={item.Description} url={item.Url} image={item.Image} />
        ))}
      </div>
      <div className="flex justify-center pb-4 gap-2">
        {
          Array.from({ length: data?.totalPages ?? 0 }, (_, i) => (
            <Link to="/search" search={{ page: i + 1, search: searchState }} className={`text-white py-1 px-3 rounded-full ${page === i + 1 ? "bg-blue-400 hover:bg-blue-500" : "bg-gray-300 hover:bg-gray-400"}`}>
              {i + 1}
            </Link>
          ))
        }
      </div>
    </div>
  )
}
